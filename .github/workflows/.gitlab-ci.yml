name: Build and Deploy Java Application

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  K8S_SERVER: ${{ secrets.K8S_SERVER }}
  K8S_TOKEN: ${{ secrets.K8S_TOKEN }}
  K8S_CA: ${{ secrets.K8S_CA }}
  MAVEN_HOME: /opt/maven

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 17 (Adoptium Temurin)
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Maven
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: '3.8.6'

      - name: Build with Maven
        run: |
          cd auth
          mvn clean install

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build Docker Image
        run: |
          docker buildx build -t anajumedina/my-java-app:latest ./auth --load

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image to Registry
        run: docker push anajumedina/my-java-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install kubectl
        run: |
          curl -LO "https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl

      - name: Set up kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" | base64 --decode > /tmp/kubeconfig
          export KUBECONFIG=/tmp/kubeconfig

      - name: Debug environment variables
        run: |
          echo "K8S_SERVER: $K8S_SERVER"
          echo "K8S_CA: $K8S_CA"
          echo "K8S_TOKEN: $K8S_TOKEN"

      - name: Verify cluster access
        run: |
          kubectl get nodes

      - name: Deploy to Kubernetes
        run: |
          kubectl set image deployment/my-app anajumedina/my-java-app=anajumedina/my-java-app:latest
          kubectl rollout status deployment/my-app --timeout=300s || kubectl rollout undo deployment/my-app
